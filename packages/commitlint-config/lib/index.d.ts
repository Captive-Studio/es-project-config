import { RuleConfigSeverity } from '@commitlint/types';
declare const config: {
    rules: {
        'header-max-length': (string | number)[];
        'body-case'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "camel-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "kebab-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "snake-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "pascal-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "start-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "upper-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "uppercase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "sentence-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "sentencecase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lower-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lowercase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lowerCase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, import("@commitlint/types").TargetCaseType[]] | undefined;
        'body-empty'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition] | undefined;
        'body-full-stop'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, string] | undefined;
        'body-leading-blank'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition] | undefined;
        'body-max-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'body-max-line-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'body-min-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'footer-empty'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition] | undefined;
        'footer-leading-blank'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition] | undefined;
        'footer-max-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'footer-max-line-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'footer-min-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'header-case'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "camel-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "kebab-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "snake-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "pascal-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "start-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "upper-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "uppercase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "sentence-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "sentencecase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lower-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lowercase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lowerCase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, import("@commitlint/types").TargetCaseType[]] | undefined;
        'header-full-stop'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, string] | undefined;
        'header-min-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'references-empty'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition] | undefined;
        'scope-case'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "camel-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "kebab-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "snake-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "pascal-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "start-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "upper-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "uppercase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "sentence-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "sentencecase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lower-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lowercase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lowerCase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, import("@commitlint/types").TargetCaseType[]] | undefined;
        'scope-empty'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition] | undefined;
        'scope-enum'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, string[]] | undefined;
        'scope-max-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'scope-min-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'signed-off-by'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, string] | undefined;
        'subject-case'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "camel-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "kebab-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "snake-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "pascal-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "start-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "upper-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "uppercase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "sentence-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "sentencecase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lower-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lowercase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lowerCase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, import("@commitlint/types").TargetCaseType[]] | undefined;
        'subject-empty'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition] | undefined;
        'subject-full-stop'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, string] | undefined;
        'subject-max-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'subject-min-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'trailer-exists'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, string] | undefined;
        'type-case'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "camel-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "kebab-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "snake-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "pascal-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "start-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "upper-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "uppercase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "sentence-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "sentencecase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lower-case"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lowercase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, "lowerCase"] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, import("@commitlint/types").TargetCaseType[]] | undefined;
        'type-empty'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition] | undefined;
        'type-enum'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, string[]] | undefined;
        'type-max-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
        'type-min-length'?: readonly [RuleConfigSeverity.Disabled] | readonly [RuleConfigSeverity, import("@commitlint/types").RuleConfigCondition, number] | undefined;
    };
    parserPreset: import("@commitlint/types").LintOptions;
    plugins: import("@commitlint/types").Plugin[];
};
export default config;
